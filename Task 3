import tkinter as tk
import random
import time
from threading import Timer

class MemoryGame:
    def __init__(self, root):
        self.root = root
        self.root.title("🧠 Memory Puzzle Game")
        self.root.geometry("400x450")
        self.symbols = ['🍎', '🚗', '🐶', '⚽', '🎵', '🌟', '📚', '🎮'] * 2  # 8 pairs
        random.shuffle(self.symbols)

        self.buttons = []
        self.flipped = []
        self.matches = 0
        self.time_left = 60  # seconds

        self.timer_label = tk.Label(root, text=f"Time Left: {self.time_left}", font=("Helvetica", 14))
        self.timer_label.pack(pady=10)

        self.frame = tk.Frame(root)
        self.frame.pack()

        self.create_board()
        self.update_timer()

    def create_board(self):
        for i in range(4):
            for j in range(4):
                idx = i * 4 + j
                btn = tk.Button(self.frame, text="❓", font=("Arial", 20), width=4, height=2,
                                command=lambda idx=idx: self.flip_card(idx))
                btn.grid(row=i, column=j, padx=5, pady=5)
                self.buttons.append(btn)

    def flip_card(self, idx):
        if self.buttons[idx]['text'] == "❓" and len(self.flipped) < 2:
            self.buttons[idx].config(text=self.symbols[idx])
            self.flipped.append(idx)

            if len(self.flipped) == 2:
                self.root.after(600, self.check_match)

    def check_match(self):
        i, j = self.flipped
        if self.symbols[i] == self.symbols[j]:
            self.buttons[i].config(state="disabled")
            self.buttons[j].config(state="disabled")
            self.matches += 1
        else:
            self.buttons[i].config(text="❓")
            self.buttons[j].config(text="❓")

        self.flipped.clear()

        if self.matches == 8:
            self.end_game(won=True)

    def update_timer(self):
        if self.time_left > 0:
            self.time_left -= 1
            self.timer_label.config(text=f"Time Left: {self.time_left}")
            self.root.after(1000, self.update_timer)
        else:
            self.end_game(won=False)

    def end_game(self, won):
        msg = "You Won! 🎉" if won else "Time's Up! You Lost! ⏰"
        for btn in self.buttons:
            btn.config(state="disabled")
        result_label = tk.Label(self.root, text=msg, font=("Helvetica", 16), fg="green" if won else "red")
        result_label.pack(pady=10)

# Run the game
if __name__ == "__main__":
    root = tk.Tk()
    game = MemoryGame(root)
    root.mainloop()
